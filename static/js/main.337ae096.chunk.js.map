{"version":3,"sources":["components/board/upgrades/upgrade/upgrade.js","components/board/player/player.js","components/board/upgrades/upgrades.js","components/board/map.js","components/cockpit/stats/Stat/stat.js","components/cockpit/stats/stats.js","components/cockpit/controls/controls.js","components/cockpit/cockpit.js","components/menu/menu.js","App.js","reportWebVitals.js","index.js"],"names":["Upgrade","Component","Player","playerLoc","this","props","style","top","y","left","x","className","Board","generateDOM","mapInfo","map","rows","i","row","cell","j","terrain","Stat","statInfo","level","currLoad","maxLoad","Stats","player","currency","digTools","sensors","carry","Controls","onClick","digHandler","Cockpit","menu","newGame","App","generateTile","type","tile","canMoveTo","resource","quantity","roll","threshold","state","move","e","RegExp","test","key","currLoc","board","mapSize","gameMap","setState","returnToBase","dig","console","log","currTile","qty","alert","unminedQty","minedQty","load","toUpperCase","slice","unload","materialValues","fe","loadValue","Object","entries","material","newGameHandler","menuShowing","size","tempGrid","push","setCellType","baseCoords","setBaseLoc","dSides","Math","floor","random","waterChance","cliffChance","round","createGrid","window","addEventListener","length","initNewGame","loadGame","loadGameHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.337ae096.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//import \"upgrade.css\";\n\nclass Upgrade extends Component {\n  render() {\n    return <div>Upgrade</div>;\n  }\n}\n\nexport default Upgrade;\n","import React, { Component } from \"react\";\nimport \"../player/player.css\";\n\nclass Player extends Component {\n  render() {\n    const playerLoc = this.props.playerLoc;\n    const style = {\n      top: playerLoc.y * 40,\n      left: playerLoc.x * 40,\n    };\n    return <div className=\"player\" style={style} />;\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport Upgrade from \"../upgrades/upgrade/upgrade.js\";\n\nclass Upgrades extends Component {\n  render() {\n    return (\n      <div>\n        Upgrades Selection goes here\n        <ul>\n          <li>{Upgrade}</li>\n          <li>{Upgrade}</li>\n          <li>{Upgrade}</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Upgrades;\n","import React, { Component } from \"react\";\nimport \"./map.css\";\nimport Player from \"./player/player\";\n\nclass Board extends Component {\n  generateDOM = () => {\n    return this.props.mapInfo.map((rows, i) => {\n      let row = rows.map((cell, j) => {\n        return <div key={j} className={cell.terrain} />;\n      });\n      return (\n        <div key={i} className=\"row\">\n          {row}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <button>Menu</button>\n        <div className=\"map\">\n          <Player playerLoc={this.props.playerLoc} />\n          {this.generateDOM()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\n\nclass Stat extends Component {\n  render() {\n    return (\n      <div>\n        Carry\n        <div>\n          Level: <span>{this.props.statInfo.level}</span>\n        </div>\n        <div>\n          Current Load: <span>{this.props.statInfo.currLoad}</span>kg\n        </div>\n        <div>\n          Maximum Load: <span>{this.props.statInfo.maxLoad}</span>kg\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stat;\n","import React, { Component } from \"react\";\nimport Stat from \"./Stat/stat\";\nimport \"./stats.css\";\n\nclass Stats extends Component {\n  render() {\n    return (\n      <div className=\"stats\">\n        <div>\n          Currency: <span>{this.props.player.currency}</span>&copy;\n        </div>\n        <div>\n          Dig Tools: <span>{this.props.player.digTools}</span>\n        </div>\n        <div>\n          Sensors: <span>{this.props.player.sensors}</span>\n        </div>\n        <Stat statInfo={this.props.player.carry} />\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React, { Component } from \"react\";\nimport \"../controls/controls.css\";\n\nclass Controls extends Component {\n  render() {\n    return (\n      <div className=\"controls\">\n        <button\n          className=\"btn\"\n          onClick={() => {\n            this.props.digHandler();\n          }}\n        >\n          Dig\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport Stats from \"../cockpit/stats/stats\";\nimport Controls from \"../cockpit/controls/controls\";\nimport \"../cockpit/cockpit.css\";\n\nclass Cockpit extends Component {\n  render() {\n    return (\n      <div className=\"cockpit\">\n        <Stats player={this.props.player} />\n        <Controls digHandler={this.props.digHandler} />\n      </div>\n    );\n  }\n}\n\nexport default Cockpit;\n","import React, { Component } from \"react\";\nimport \"./menu.css\";\n\nconst menu = (props) => {\n  return (\n    <div className=\"menu\">\n      <p>Start mining sequence...</p>\n      <button onClick={props.newGame}>New Game</button>\n      {/* <button onClick={props.loadGame}>Load Game</button> */}\n    </div>\n  );\n};\n\nexport default menu;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Modal from \"./components/UI/modal/modal\";\nimport Upgrades from \"./components/board/upgrades/upgrades.js\";\nimport Map from \"./components/board/map\";\nimport Cockpit from \"./components/cockpit/cockpit\";\nimport Menu from \"./components/menu/menu\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuShowing: true,\n      level: 1,\n      board: {\n        mapSize: 8,\n        gameMap: [],\n      },\n      player: {\n        currency: 0,\n        sensors: 1,\n        digTools: 1,\n        carry: {\n          level: 1,\n          currLoad: 0,\n          load: {},\n          maxLoad: 100,\n        },\n        currLoc: {\n          x: 0,\n          y: 0,\n        },\n      },\n    };\n  }\n\n  createGrid(size) {\n    console.log(\"creating grid\");\n    let tempGrid = { ...this.state.board };\n    for (let i = 0; i < size; i++) {\n      tempGrid.gameMap.push([]);\n      for (let j = 0; j < size; j++) {\n        tempGrid.gameMap[i][j] = this.generateTile(this.setCellType(25, 20));\n      }\n    }\n    //set up base\n    const baseCoords = this.setBaseLoc(size);\n    console.log(\"base site selected\");\n    tempGrid.gameMap[baseCoords[1]][baseCoords[0]] = this.generateTile(\"base\");\n    this.setState({ tempGrid });\n    console.log(\"base constructed\");\n    console.log(tempGrid);\n\n    //place player\n    const currLoc = { ...this.state.player.currLoc };\n    currLoc.x = baseCoords[0];\n    currLoc.y = baseCoords[1];\n    this.setState({ player: { ...this.state.player, currLoc } });\n  }\n\n  generateTile = (type) => {\n    let tile = {\n      terrain: type,\n    };\n\n    tile.canMoveTo =\n      tile.terrain === \"land\" || tile.terrain === \"base\" ? true : false;\n\n    if (tile.terrain === \"land\") {\n      //will eventually add more resources\n      tile.resource = \"fe\";\n      tile.quantity = this.roll(20);\n      tile.threshold = this.state.level;\n    }\n    return tile;\n  };\n\n  roll(dSides) {\n    return Math.floor(Math.random() * dSides) + 1;\n  }\n\n  setCellType(waterChance, cliffChance) {\n    if (this.roll(100) <= waterChance) {\n      return \"water\";\n    } else if (this.roll(100) <= cliffChance) {\n      return \"cliff\";\n    } else {\n      return \"land\";\n    }\n  }\n\n  setBaseLoc(size) {\n    console.log(\"setting up base\");\n    const x = Math.floor(Math.random() * size);\n    let y;\n    if (x === 0 || x === size - 1) {\n      y = Math.floor(Math.random() * size);\n    } else {\n      y = Math.round(Math.random());\n      if (y === 1) y = size - 1;\n    }\n    return [x, y];\n  }\n\n  initNewGame() {\n    console.log(\"init game\");\n    //create gameMap\n    this.createGrid(this.state.board.mapSize);\n    //add bot mobility\n    window.addEventListener(\"keydown\", this.move);\n  }\n\n  move = (e) => {\n    if (!RegExp(\"Arrow*\").test(e.key)) return;\n\n    let currLoc = { ...this.state.player.currLoc };\n    //Asimov's second law\n    if (e.key === \"ArrowUp\" && currLoc.y > 0) {\n      currLoc.y -= 1;\n    }\n    if (e.key === \"ArrowDown\" && currLoc.y < this.state.board.mapSize - 1) {\n      currLoc.y += 1;\n    }\n    if (e.key === \"ArrowLeft\" && currLoc.x > 0) {\n      currLoc.x -= 1;\n    }\n    if (e.key === \"ArrowRight\" && currLoc.x < this.state.board.mapSize - 1) {\n      currLoc.x += 1;\n    }\n\n    //Asimov's Third Law\n    const validMove = this.state.board.gameMap[currLoc.y][currLoc.x].canMoveTo;\n    if (validMove) {\n      this.setState({ player: { ...this.state.player, currLoc } });\n    }\n\n    //All your base are belong to us\n    if (this.state.board.gameMap[currLoc.y][currLoc.x].terrain === \"base\") {\n      this.returnToBase();\n    }\n  };\n\n  // upgrade: function (equipment, lvl) {\n  //   let n;\n  //   switch (equipment) {\n  //     case \"sensor\":\n  //       n = 30;\n  //       break;\n  //     case \"digTools\":\n  //     case \"carry\":\n  //       n = 5;\n  //       break;\n  //   }\n  //   const cost = n * lvl ** 2;\n  //   console.log(cost);\n  //   //deduct cost from currency\n  //   //update sensor level in bot obj\n  //   //update display\n  //   // Carry Capacity cost 3x(Lvl^2) in ©, so L2 costs 12©, L3 costs 27©, etc. Each Carry level increases carry capacity by 100kg.\n  // },\n\n  dig = (e) => {\n    console.log(\"digging\");\n    const player = { ...this.state.player };\n    const board = { ...this.state.board };\n    const currTile = board.gameMap[player.currLoc.y][player.currLoc.x];\n    if (currTile.terrain === \"base\") {\n      alert(`Security Bot: \"You can't dig on base!\"`);\n      return;\n    }\n    if (player.digTools >= currTile.threshold) {\n      console.log(\"successful dig\");\n      const resource = currTile.resource;\n      const qty = currTile.quantity;\n      console.log(player, currTile, qty);\n      if (player.carry.maxLoad === player.carry.currLoad) {\n        alert(\"You are already full. Return to base to unload\");\n        return;\n      } else {\n        const unminedQty =\n          player.carry.currLoad + qty > player.carry.maxLoad\n            ? player.carry.currLoad + qty - player.carry.maxLoad\n            : 0;\n        const minedQty = qty - unminedQty;\n\n        //Later we will have more resources so load will have to init type of resource being stored.\n        if (!player.carry.load[resource]) player.carry.load[resource] = 0;\n        player.carry.load[resource] += minedQty;\n        player.carry.currLoad += minedQty;\n\n        //update player state\n        this.setState({ player: { ...this.state.player } });\n        alert(\n          `You mined ${minedQty} ${\n            resource[0].toUpperCase() + resource.slice(1)\n          }`\n        );\n\n        //update board\n        currTile.quantity = unminedQty;\n        this.setState({ board: { ...this.state.board } });\n      }\n    } else {\n      console.log(\"You are not equipped for this dig\");\n    }\n    //TODO: notify user w/o alerts\n  };\n\n  returnToBase = () => {\n    console.log(\"returned to base\");\n    this.unload();\n  };\n\n  unload = () => {\n    console.log(\"unloading\");\n    const player = { ...this.state.player };\n    //calc currency earned\n    const materialValues = {\n      fe: 10,\n    };\n\n    let loadValue = 0;\n    for (const [material, amt] of Object.entries(player.carry.load)) {\n      loadValue += amt / materialValues[material];\n    }\n    player.currency += loadValue;\n\n    player.carry.currLoad = 0;\n    player.carry.load = {};\n    //clear currLoad and load values\n    this.setState({ player });\n    //notify user\n    alert(`Mr. Orewell: \"Great job! You earned ${loadValue}(c)\"`);\n  };\n\n  newGameHandler = () => {\n    console.log(\"New Game\");\n    this.setState({ menuShowing: false });\n  };\n\n  loadGameHandler() {\n    console.log(\"Load Game\");\n  }\n\n  componentDidMount() {\n    if (this.state.board.gameMap.length === 0) {\n      this.initNewGame();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Modal /> */}\n        <h1>Miner Bot</h1>\n        {this.state.menuShowing ? (\n          <Menu newGame={this.newGameHandler} loadGame={this.loadGameHandler} />\n        ) : (\n          <div className=\"container\">\n            <Map\n              mapInfo={this.state.board.gameMap}\n              playerLoc={this.state.player.currLoc}\n            />\n            <Cockpit player={this.state.player} digHandler={this.dig} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}